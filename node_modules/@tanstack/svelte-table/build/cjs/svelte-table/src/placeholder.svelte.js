/**
 * svelte-table
 *
 * Copyright (c) TanStack
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var internal = require('svelte/internal');

/* packages/svelte-table/src/placeholder.svelte generated by Svelte v3.49.0 */

function create_fragment(ctx) {
	let t;

	return {
		c() {
			t = internal.text(/*content*/ ctx[0]);
		},
		m(target, anchor) {
			internal.insert(target, t, anchor);
		},
		p(ctx, [dirty]) {
			if (dirty & /*content*/ 1) internal.set_data(t, /*content*/ ctx[0]);
		},
		i: internal.noop,
		o: internal.noop,
		d(detaching) {
			if (detaching) internal.detach(t);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { content } = $$props;

	$$self.$$set = $$props => {
		if ('content' in $$props) $$invalidate(0, content = $$props.content);
	};

	return [content];
}

class Placeholder extends internal.SvelteComponent {
	constructor(options) {
		super();
		internal.init(this, options, instance, create_fragment, internal.safe_not_equal, { content: 0 });
	}
}

exports["default"] = Placeholder;
//# sourceMappingURL=placeholder.svelte.js.map
