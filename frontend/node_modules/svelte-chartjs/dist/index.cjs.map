{"version":3,"file":"index.cjs","sources":["../src/Base.svelte","../src/Line.svelte","../src/Radar.svelte","../src/Doughnut.svelte","../src/Pie.svelte","../src/Bar.svelte","../src/Polar.svelte","../src/Bubble.svelte","../src/Scatter.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { onMount, afterUpdate, onDestroy } from 'svelte';\n\n  import { Chart } from 'chart.js';\n\n  import type {\n    TChartType,\n    TChartData,\n    TChartOptions,\n    TChartPlugin,\n    TypedChartJS,\n  } from './types';\n\n  export let data: TChartData = {\n    labels: [],\n    datasets: [{ data: [] }],\n  };\n  export let type: TChartType = 'line';\n  export let options: TChartOptions<TChartType> = {};\n  export let plugins: TChartPlugin[] = [];\n\n  function clean(props: SvelteAllProps) {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    let { data, type, options, plugins, children, $$scope, $$slots, ...rest } =\n      props;\n\n    return rest;\n  }\n\n  let props = clean($$props);\n\n  let chart: TypedChartJS | null = null;\n  let chartRef: HTMLCanvasElement;\n\n  onMount(() => {\n    chart = new Chart(chartRef, {\n      type,\n      data,\n      options,\n      plugins,\n    });\n  });\n  afterUpdate(() => {\n    if (!chart) return;\n\n    chart.data = data;\n    chart.options = options;\n    chart.update();\n  });\n\n  onDestroy(() => {\n    if (chart) chart.destroy();\n    chart = null;\n  });\n</script>\n\n<canvas bind:this={chartRef} {...props} />\n","<script lang=\"ts\">\n  import { Chart, LineController } from 'chart.js';\n  import type { DefaultDataPoint } from 'chart.js';\n\n  import Base from './Base.svelte';\n  import type { TChartData, TChartOptions, TChartPlugin } from './types';\n\n  interface $$Props {\n    data: TChartData<'line', DefaultDataPoint<'line'>, unknown>;\n    options?: TChartOptions<'line'>;\n    plugins?: TChartPlugin<'line'>[];\n  }\n\n  Chart.register(LineController);\n</script>\n\n<Base {...$$props} type=\"line\" />\n","<script lang=\"ts\">\n  import { Chart, RadarController } from 'chart.js';\n  import type { DefaultDataPoint } from 'chart.js';\n\n  import Base from './Base.svelte';\n  import type { TChartData, TChartOptions, TChartPlugin } from './types';\n\n  interface $$Props {\n    data: TChartData<'radar', DefaultDataPoint<'radar'>, unknown>;\n    options?: TChartOptions<'radar'>;\n    plugins?: TChartPlugin<'radar'>[];\n  }\n\n  Chart.register(RadarController);\n</script>\n\n<Base {...$$props} type=\"radar\" />\n","<script lang=\"ts\">\n  import { Chart, DoughnutController } from 'chart.js';\n\n  import Base from './Base.svelte';\n  import type { TChartData, TChartOptions, TChartPlugin } from './types';\n\n  interface $$Props {\n    data: TChartData<'doughnut', number[], unknown>;\n    options?: TChartOptions<'doughnut'>;\n    plugins?: TChartPlugin<'doughnut'>[];\n  }\n\n  Chart.register(DoughnutController);\n</script>\n\n<Base {...$$props} type=\"doughnut\" />\n","<script lang=\"ts\">\n  import { Chart, PieController } from 'chart.js';\n\n  import Base from './Base.svelte';\n  import type { TChartData, TChartOptions, TChartPlugin } from './types';\n\n  interface $$Props {\n    data: TChartData<'pie', number[], unknown>;\n    options?: TChartOptions<'pie'>;\n    plugins?: TChartPlugin<'pie'>[];\n  }\n\n  Chart.register(PieController);\n</script>\n\n<Base {...$$props} type=\"pie\" />\n","<script lang=\"ts\">\n  import { Chart, BarController } from 'chart.js';\n\n  import Base from './Base.svelte';\n  import type { TChartData, TChartOptions, TChartPlugin } from './types';\n\n  interface $$Props {\n    data: TChartData<'bar', number[], unknown>;\n    options?: TChartOptions<'bar'>;\n    plugins?: TChartPlugin<'bar'>[];\n  }\n\n  Chart.register(BarController);\n</script>\n\n<Base {...$$props} type=\"bar\" />\n","<script lang=\"ts\">\n  import { Chart, PolarAreaController } from 'chart.js';\n\n  import Base from './Base.svelte';\n  import type { TChartData, TChartOptions, TChartPlugin } from './types';\n\n  interface $$Props {\n    data: TChartData<'polarArea', number[], unknown>;\n    options?: TChartOptions<'polarArea'>;\n    plugins?: TChartPlugin<'polarArea'>[];\n  }\n\n  Chart.register(PolarAreaController);\n</script>\n\n<Base {...$$props} type=\"polarArea\" />\n","<script lang=\"ts\">\n  import { Chart, BubbleController } from 'chart.js';\n  import type { BubbleDataPoint } from 'chart.js';\n\n  import Base from './Base.svelte';\n  import type { TChartData, TChartOptions, TChartPlugin } from './types';\n\n  interface $$Props {\n    data: TChartData<'bubble', BubbleDataPoint[], unknown>;\n    options?: TChartOptions<'bubble'>;\n    plugins?: TChartPlugin<'bubble'>[];\n  }\n\n  Chart.register(BubbleController);\n</script>\n\n<Base {...$$props} type=\"bubble\" />\n","<script lang=\"ts\">\n  import { Chart, ScatterController } from 'chart.js';\n  import type { DefaultDataPoint } from 'chart.js';\n\n  import Base from './Base.svelte';\n  import type { TChartData, TChartOptions, TChartPlugin } from './types';\n\n  interface $$Props {\n    data: TChartData<'scatter', DefaultDataPoint<'scatter'>, unknown>;\n    options?: TChartOptions<'scatter'>;\n    plugins?: TChartPlugin<'scatter'>[];\n  }\n\n  Chart.register(ScatterController);\n</script>\n\n<Base {...$$props} type=\"scatter\" />\n"],"names":["ctx","insert","target","canvas","anchor","clean","props","data","type","options","plugins","children","$$scope","$$slots","rest","labels","datasets","$$props","chart","chartRef","onMount","Chart","afterUpdate","update","onDestroy","destroy","$$value","base_spread_levels","register","LineController","RadarController","DoughnutController","PieController","BarController","PolarAreaController","BubbleController","ScatterController"],"mappings":"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"}